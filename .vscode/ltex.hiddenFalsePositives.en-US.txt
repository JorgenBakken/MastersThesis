{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q/pgfplots/xmin /pgfplots/xmax /pgfplots/ymin /pgfplots/ymax\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Q(A) at (rel axis cs:,); (B) at (rel axis cs:,); (C) at (rel axis cs:,);\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q[#5] (A)– node[pos=0.5,anchor=north] 1 (B)– (C)– node[pos=0.5,anchor=west] #4 cycle;\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qcompat=newest\\E$"}
{"rule":"COMMA_PARENTHESIS_WHITESPACE","sentence":"^\\Q.\\E$"}
{"rule":"LIGATURES","sentence":"^\\QAdditionally, Bærland et al. explored the use of deep neural networks for classification \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QOptimal Reparameterization via Dynamic Programming \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q: Curves, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q: Initial parameterizations OptimizeReparam \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QAlignCurves\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QMoveStartToIdentity\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Qvee\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QSRVT\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QComputeCostMatrix\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q path\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QTraceOptimalPath\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QLinearInterpolate\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Qpath\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q,path\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QInterpolate\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QCalculate Cost and Parent Matrices for Dynamic Programming \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q: Grid points \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q: Values defined on the domain of \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q depth\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q: Depth of the search area calculateCostMatrixAndParent \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q,depth \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Qlength\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Qmatrixofinfinity\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Initialize cost matrix to a large value \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Qempty matrix\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Initialize parent matrix \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q Set initial cost to zero \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QNone No predecessor for initial condition \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q to \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q preds\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QfindPreds\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q,depth\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q pred\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Qpreds costtopred\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QlocalCost\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q,pred\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q cost\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Qcosttopred\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Qpred\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q cost\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QA[i, j] cost\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QP[i, j] pred\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\QP, A\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qı in 1,...,9 ı=3 ı=6 [Visualization of Rotations from Synthetic Data]Rotations generated from synthetic data using \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qı in 1,2,3,4,5,6,7,8,9 ı=3 ı=6 [Visualization of Translations from Synthetic Data]Translation part of the SE\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q elements generated from synthetic data by solving \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q with the functions defined in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"LC_AFTER_PERIOD","sentence":"^\\QMinimizing \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q is performed using Sequential Least Squares Quadratic Programming (SLSQP) via scipy.optimize \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, ensuring an increasing \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and mitigating local minima with multiple randomized initializations.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QWe utilize files from the CMU Motion Capture Library \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, specifically XX.asf files and XXYY.amc files, where XX represents the subject (describing the skeleton or body of the performer) and YY represents the motion (the action performed).\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QK-Medoids clustering on motion capture data Motion Reparam LogSig Reparam (Red) LogSig (Red) Motion Reparam LogSig Reparam (Red) LogSig (Red)\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qı in 1,2,3,4,5,6,7,8,9 ı=3 ı=6 [Visualization of Translations from Synthetic Data]Translation part of the \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q elements generated from synthetic data by solving \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q with the functions defined in \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QFor multi-component curves \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, the function expands to: \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q where \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q are the i-th components of the curves \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q.\\E$"}
{"rule":"LC_AFTER_PERIOD","sentence":"^\\QMinimizing \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q can be done in several ways, but is here performed using Sequential Least Squares Quadratic Programming (SLSQP) via scipy.optimize \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q, ensuring an increasing \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and mitigating local minima with multiple randomized initializations.\\E$"}
